// Weather.tsx
import React, { useState } from "react";
import axios from "axios";

// ƒê·ªãnh nghƒ©a c·∫•u tr√∫c d·ªØ li·ªáu th·ªùi ti·∫øt ƒë·ªÉ code an to√†n h∆°n
interface WeatherData {
  current_condition: {
    temp_C: string;
    weatherDesc: { value: string }[];
  }[];
}

const Weather: React.FC = () => {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState<WeatherData | null>(null);
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false);

  const handleSearch = async () => {
    if (!city.trim()) {
      setError("Vui l√≤ng nh·∫≠p t√™n th√†nh ph·ªë.");
      return;
    }
    setLoading(true);
    setError("");
    setWeather(null);
    try {
      const res = await axios.get<WeatherData>(`https://wttr.in/${city}?format=j1`);
      setWeather(res.data);
    } catch (err) {
      setError("Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë n√†y!");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div>
      <h2>üå§Ô∏è ·ª®ng d·ª•ng th·ªùi ti·∫øt</h2>
      <input
        type="text"
        value={city}
        onChange={(e) => setCity(e.target.value)}
        placeholder="Nh·∫≠p t√™n th√†nh ph·ªë..."
        style={{ padding: '8px', marginRight: '10px' }}
      />
      <button onClick={handleSearch} disabled={loading} style={{ padding: '8px 12px' }}>
        {loading ? 'ƒêang t√¨m...' : 'T√¨m ki·∫øm'}
      </button>

      {error && <p style={{ color: "red", marginTop: '10px' }}>{error}</p>}

      {weather && (
        <div style={{ marginTop: "20px", border: '1px solid #ccc', padding: '15px', borderRadius: '5px' }}>
          <h3>Th·ªùi ti·∫øt t·∫°i {city}</h3>
          <p>Nhi·ªát ƒë·ªô: {weather.current_condition[0].temp_C}¬∞C</p>
          <p>T√¨nh tr·∫°ng: {weather.current_condition[0].weatherDesc[0].value}</p>
        </div>
      )}
    </div>
  );
};

export default Weather;


